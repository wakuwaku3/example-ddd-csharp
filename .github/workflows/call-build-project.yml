on:
  workflow_call:
    inputs:
      sha:
        description: "SHA of the commit to test"
        required: true
        default: ${{ github.sha }}
        type: string
      project:
        required: true
        type: string

permissions:
  contents: read
  packages: write
  id-token: write

concurrency:
  group: build-${{ inputs.project }}-${{ inputs.sha }}

jobs:
  check-artifact:
    runs-on: ubuntu-latest
    outputs:
      artifact-exists: ${{ steps.check.outputs.artifact-exists }}
    steps:
      - name: Check if artifact exists
        id: check
        run: |
          if gh api -H "Accept: application/vnd.github.v3+json" /repos/${{ github.repository }}/actions/artifacts | jq -e '.artifacts[] | select(.name == "build-${{ inputs.project }}-${{ inputs.sha }}")' > /dev/null; then
            echo "artifact-exists=true" >> $GITHUB_ENV
          else
            echo "artifact-exists=false" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: check-artifact
    if: needs.check-artifact.outputs.artifact-exists == 'false'
    steps:
      - uses: actions/checkout@v4
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            $(dirname ${{ inputs.project }})/bin
            $(dirname ${{ inputs.project }})/obj
          key: ${{ runner.os }}-dotnet-${{ hashFiles(inputs.project) }}
      - name: Run build in dev container
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/wakuwaku3/example-ddd-csharp/devcontainer
          push: never
          runCmd: |
            cd $(dirname ${{ inputs.project }})
            dotnet restore
            # release ビルドを実行する
            dotnet build -c Release
            # inputs.project の sufix が .Tests.csproj の場合、追加でテストを実行する
            if [[ ${{ inputs.project }} == *".Tests.csproj" ]]; then
              dotnet test
            fi
      - name: Save cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            $(dirname ${{ inputs.project }})/bin
            $(dirname ${{ inputs.project }})/obj
          key: ${{ runner.os }}-dotnet-${{ hashFiles(inputs.project) }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ inputs.project }}-${{ inputs.sha }}
          path: $(dirname ${{ inputs.project }})/bin/Release/
